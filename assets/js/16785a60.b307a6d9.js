"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9741],{102:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(5893),s=n(1151);const o={title:"Kubernetes (Helm)",description:"Install Pod Arcade on Kubernetes using Docker"},a=void 0,i={id:"getting-started/helm",title:"Kubernetes (Helm)",description:"Install Pod Arcade on Kubernetes using Docker",source:"@site/docs/getting-started/helm.md",sourceDirName:"getting-started",slug:"/getting-started/helm",permalink:"/docs/getting-started/helm",draft:!1,unlisted:!1,editUrl:"https://github.com/pod-arcade/website/tree/main/docs/getting-started/helm.md",tags:[],version:"current",frontMatter:{title:"Kubernetes (Helm)",description:"Install Pod Arcade on Kubernetes using Docker"},sidebar:"tutorialSidebar",previous:{title:"Docker",permalink:"/docs/getting-started/docker"},next:{title:"Configuration",permalink:"/docs/category/configuration"}},l={},c=[{value:"Deploying with Helm",id:"deploying-with-helm",level:2},{value:"Example Configurations",id:"example-configurations",level:2},{value:"Server",id:"server",level:2},{value:"Desktop",id:"desktop",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Kubernetes is the recommended way to deploy Pod Arcade. It's how we do our development. For Desktops, it also deploys differently than it does with pure Docker."}),"\n",(0,r.jsx)(t.p,{children:"We deploy the desktops and applications as separate containers, which allows us to update them independently. This means that you can share the same base Desktop image across multiple applications."}),"\n",(0,r.jsx)(t.h2,{id:"deploying-with-helm",children:"Deploying with Helm"}),"\n",(0,r.jsxs)(t.p,{children:["We provide some reference helm charts for deploying Pod Arcade on Kubernetes, at ",(0,r.jsx)(t.a,{href:"https://github.com/pod-arcade/charts",children:"pod-arcade/charts"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"To get started simply add the helm repository:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"helm repo add pod-arcade https://charts.pod-arcade.com\n"})}),"\n",(0,r.jsx)(t.p,{children:"Then install the server component:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"helm install pa-server pod-arcade/server\n"})}),"\n",(0,r.jsxs)(t.p,{children:["you can find the values.yaml file for the server chart ",(0,r.jsx)(t.a,{href:"https://github.com/pod-arcade/charts/blob/main/charts/server/values.yaml",children:"here"}),". Reference the ",(0,r.jsx)(t.a,{href:"/docs/configuration/server#server-configuration",children:"server configuration"})," for more information on the configuration options."]}),"\n",(0,r.jsx)(t.p,{children:"Then install a desktop component:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"helm install pa-desktop pod-arcade/desktop-sidecar\n"})}),"\n",(0,r.jsxs)(t.p,{children:["the values.yaml file for the desktop chart can be found ",(0,r.jsx)(t.a,{href:"https://github.com/pod-arcade/charts/blob/main/charts/desktop-sidecar/values.yaml",children:"here"}),". Reference the ",(0,r.jsx)(t.a,{href:"/docs/configuration/desktop#desktop-configuration",children:"desktop configuration"})," for more information on the configuration options."]}),"\n",(0,r.jsx)(t.h2,{id:"example-configurations",children:"Example Configurations"}),"\n",(0,r.jsx)(t.h2,{id:"server",children:"Server"}),"\n",(0,r.jsx)(t.p,{children:"You can run the server component with or without an ingress controller. Below are two example values files for each."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",metastring:'title="values-ingress.yaml"',children:'env:\n  AUTH_REQUIRED: true\n  DESKTOP_PSK: magicPa$$wordForDesktops\n  CLIENT_PSK: magicPa$$wordForClients\n  ICE_SERVERS: \'[{"urls":["stun:stun.l.google.com:19302"]}]\'\n  SERVE_TLS: false\n\ningress:\n  enabled: true\n  className: "my-ingress-class"\n  annotations:\n    {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: "true"\n  hosts:\n    - host: your.domain.com\n  tls:\n    - secretName: your-tls-secret\n      hosts:\n        - your.domain.com\n'})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",metastring:'title="values-loadbalancer.yaml"',children:'env:\n  AUTH_REQUIRED: true\n  DESKTOP_PSK: magicPa$$wordForDesktops\n  CLIENT_PSK: magicPa$$wordForClients\n  ICE_SERVERS: \'[{"urls":["stun:stun.l.google.com:19302"]}]\'\n  SERVE_TLS: false\n\nservice:\n  type: NodePort # or LoadBalancer\n  httpPort: 80\n  httpNodePort: 30080\n  httpsPort: 443\n  httpsNodePort: 30443\n  mqttPort: 1883\n  mqttNodePort: 31883\n'})}),"\n",(0,r.jsx)(t.h2,{id:"desktop",children:"Desktop"}),"\n",(0,r.jsx)(t.p,{children:"The Desktop configuration is a little bit simpler. Here's an example of a values file for the desktop chart. It uses the wonderful Retroarch image created by games-on-whales."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",metastring:'title="values.yaml"',children:'nodeSelector:\n  feature.node.kubernetes.io/cpu-model.vendor_id: AMD # Used to select our servers with AMD integrated graphics.\nenv:\n  MQTT_HOST: ws://pa-server-server/mqtt # This is the URL of the Pod-Arcade server.\n  DESKTOP_ID: pa-retroarch # A unique identifier for this desktop. It should be [a-z0-9-]+.\n  DESKTOP_PSK: magicPa$$wordForDesktops # This is the pre-shared key for desktop authentication\n\nsidecar:\n  image:\n    # This is an excellent image from games-on-whales.\n    repository: gameonwhales/retroarch\n    pullPolicy: IfNotPresent\n    tag: "edge"\n  storage:\n    enabled: true # Enable Storage\n    create: true # Automatically create the PVC\n    storageClass: "ssd" # Storage class to use\n    size: 25Gi # Size of the provisioned storage\n    mounts: # A map of paths to mount from the PVC to the container\n      "/": "/home/ubuntu/.config/retroarch"\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>a});var r=n(7294);const s={},o=r.createContext(s);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);